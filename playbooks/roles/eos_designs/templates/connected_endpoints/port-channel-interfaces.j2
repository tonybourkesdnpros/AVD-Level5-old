{# Leaf server port-channels #}
port_channel_interfaces:
{% for endpoint_key in connected_endpoints | arista.avd.natural_sort %}
{%     for connected_endpoint in connected_endpoints[endpoint_key] | arista.avd.natural_sort %}
{%         for adapter in connected_endpoints[endpoint_key][connected_endpoint].adapters %}
{%             if adapter.profile is arista.avd.defined %}
{%                 set adapter_profile = port_profiles[adapter.profile] | arista.avd.default({}) %}
{%                 if adapter_profile.parent_profile is arista.avd.defined %}
{%                     set parent_profile = port_profiles[adapter_profile.parent_profile] | arista.avd.default({}) %}
{%                 endif %}
{%             endif %}
{%             set adapter_settings = {} | combine(parent_profile | arista.avd.default({}),
                                                   adapter_profile | arista.avd.default({}),
                                                   adapter, recursive=true, list_merge='replace') %}
{%             if adapter_settings.port_channel.mode is arista.avd.defined %}
{%                 set channel_group_id = (adapter.switch_ports[0] | regex_findall("\d") | join) %}
{%                 set adapter_port_channel_description = adapter_settings.port_channel.description | arista.avd.default('') %}
{%                 for adapter_switch in adapter.switches | arista.avd.natural_sort %}
{%                     if adapter_switch == inventory_hostname %}
  Port-Channel{{ channel_group_id }}:
{%                         set peer = connected_endpoint %}
    description: "{% include switch.interface_descriptions.connected_endpoints_port_channel_interfaces %}"
    type: switched
{%                         if adapter_settings.port_channel.enabled is arista.avd.defined(false) %}
    shutdown: true
{%                         else %}
    shutdown: false
{%                         endif %}
    mode: {{ adapter_settings.mode | arista.avd.default }}
{%                         if adapter_settings.mtu is arista.avd.defined %}
    mtu: {{ adapter_settings.mtu }}
{%                         endif %}
{%                         if adapter_settings.l2_mtu is arista.avd.defined  %}
    l2_mtu: {{ adapter_settings.l2_mtu }}
{%                         endif %}
    vlans: {{ adapter_settings.vlans | arista.avd.default }}
{%                         if adapter_settings.native_vlan is arista.avd.defined %}
    native_vlan: {{ adapter_settings.native_vlan }}
{%                         endif %}
{%                         if adapter_settings.spanning_tree_portfast is arista.avd.defined %}
    spanning_tree_portfast: {{ adapter_settings.spanning_tree_portfast }}
{%                         endif %}
{%                         if adapter_settings.spanning_tree_bpdufilter is arista.avd.defined %}
    spanning_tree_bpdufilter: {{ adapter_settings.spanning_tree_bpdufilter }}
{%                         endif %}
{%                         if adapter_settings.spanning_tree_bpduguard is arista.avd.defined %}
    spanning_tree_bpduguard: {{ adapter_settings.spanning_tree_bpduguard }}
{%                         endif %}
{%                         if adapter_settings.storm_control is arista.avd.defined and switch.platform_settings.feature_support.interface_storm_control is not arista.avd.defined(false) %}
    storm_control:
{%                             for section in adapter_settings.storm_control %}
      {{ section }}:
        level: {{ adapter_settings.storm_control[section].level }}
{%                                 if adapter_settings.storm_control[section].unit is arista.avd.defined %}
        unit: {{ adapter_settings.storm_control[section].unit }}
{%                                 endif %}
{%                             endfor %}
{%                         endif %}
{%                         if adapter.switches | unique | list | length > 1 %}
{%                             if adapter.port_channel.short_esi is arista.avd.defined %}
{%                                 if adapter.port_channel.short_esi.split(':') | length == 3 %}
    esi: {{ adapter.port_channel.short_esi | arista.avd.generate_esi(evpn_short_esi_prefix) }}
    rt: {{ adapter.port_channel.short_esi | arista.avd.generate_route_target }}
{%                                     if adapter_settings.port_channel.mode == 'active' %}
    lacp_id: {{ adapter.port_channel.short_esi | arista.avd.generate_lacp_id }}
{%                                     endif %}
{%                                 endif %}
{%                             elif switch.mlag is arista.avd.defined(true) %}
    mlag: {{ channel_group_id }}
{%                             endif %}
{%                         endif %}
{%                         if adapter_settings.port_channel.lacp_fallback.mode is arista.avd.defined('static') %}
    lacp_fallback_mode: {{ adapter_settings.port_channel.lacp_fallback.mode }}
    lacp_fallback_timeout: {{ adapter_settings.port_channel.lacp_fallback.timeout | arista.avd.default('90') }}
{%                         endif %}
{%                         if adapter_settings.qos_profile is arista.avd.defined %}
    service_profile: {{ adapter_settings.qos_profile }}
{%                         endif %}
{%                         if adapter_settings.port_channel.raw_eos_cli is arista.avd.defined %}
    eos_cli: |
      {{ adapter_settings.port_channel.raw_eos_cli | indent(6,false) }}
{%                         endif %}
{%                         if adapter_settings.port_channel.structured_config is arista.avd.defined %}
    struct_cfg: {{ adapter_settings.port_channel.structured_config }}
{%                         endif %}
{%                         break %}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endfor %}
{% endfor %}
