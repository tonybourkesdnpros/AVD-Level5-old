{# tenant router bgp evpn configuration - MAC-VRF VLAN Aware bundles #}
  vlan_aware_bundles:
{% if vxlan_vlan_aware_bundles is arista.avd.defined(true) %}
{%     for tenant in network_services_data.tenants %}
{%         for vrf in tenant.vrfs %}
{%             if vrf.svis | length > 0 %}
{%                 set svi_int_list = [] %}
{%                 for svi in vrf.svis %}
{%                     if svi.vxlan is arista.avd.defined(false) %}
{%                         continue %}
{%                     endif %}
{%                     do svi_int_list.append(svi.id | int) %}
{%                 endfor %}
{%                 if svi_int_list | length == 0 %}
{%                     continue %}
{%                 endif %}
{%                 set vrf_vni_int = vrf.vrf_vni | int %}
{%                 set bundle_number =  vrf_vni_int + tenant.vlan_aware_bundle_number_base | arista.avd.default(0) %}
    {{ vrf.name }}:
      rd: "{{ network_services_data.evpn_rd_admin_subfield }}:{{ bundle_number }}"
      route_targets:
        both:
          - "{{ network_services_data.evpn_rt_admin_subfield or bundle_number }}:{{ bundle_number }}"
      redistribute_routes:
        - learned
      vlan: {{ svi_int_list | map('int') | arista.avd.list_compress }}
{%             endif %}
{%         endfor %}
{%         for l2vlan in tenant.l2vlans %}
{%             if l2vlan.vxlan is arista.avd.defined(false) %}
{%                 continue %}
{%             endif %}
{%             set l2vlan_int = l2vlan.id | int %}
{%             set vni = l2vlan.vni_override | arista.avd.default(
                         tenant.mac_vrf_vni_base + l2vlan_int) %}
    {{ l2vlan.name }}:
      tenant: {{ tenant.name }}
      rd: "{{ network_services_data.evpn_rd_admin_subfield }}:{{ vni }}"
      route_targets:
        both:
          - "{{ network_services_data.evpn_rt_admin_subfield or vni }}:{{ vni }}"
      redistribute_routes:
        - learned
      vlan: {{ l2vlan_int }}
{%         endfor %}
{%     endfor %}
{% endif %}
