{# eos - Router BGP #}
{% if router_bgp.as is arista.avd.defined %}
!
router bgp {{ router_bgp.as }}
{%     if router_bgp.router_id is arista.avd.defined %}
   router-id {{ router_bgp.router_id }}
{%     endif %}
{%     if router_bgp.bgp_cluster_id is arista.avd.defined %}
   bgp cluster-id {{ router_bgp.bgp_cluster_id }}
{%     endif %}
{%     for bgp_default in router_bgp.bgp_defaults | arista.avd.default([]) %}
   {{ bgp_default }}
{%     endfor %}
{%     if router_bgp.bgp.bestpath.d_path is arista.avd.defined(true) %}
   bgp bestpath d-path
{%     endif %}
{%     for peer_group in router_bgp.peer_groups | arista.avd.natural_sort %}
{%         if router_bgp.peer_groups[peer_group].bgp_listen_range_prefix is arista.avd.defined and router_bgp.peer_groups[peer_group].peer_filter is arista.avd.defined %}
   bgp listen range {{ router_bgp.peer_groups[peer_group].bgp_listen_range_prefix }} peer-group {{ peer_group }} peer-filter {{ router_bgp.peer_groups[peer_group].peer_filter }}
{%         endif %}
{%     endfor %}
{%     for peer_group in router_bgp.peer_groups | arista.avd.natural_sort %}
{%         if router_bgp.peer_groups[peer_group].description is arista.avd.defined %}
   neighbor {{ peer_group }} description {{ router_bgp.peer_groups[peer_group].description }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].shutdown is arista.avd.defined(true) %}
   neighbor {{ peer_group }} shutdown
{%         endif %}
   neighbor {{ peer_group }} peer group
{%         if router_bgp.peer_groups[peer_group].remote_as is arista.avd.defined %}
   neighbor {{ peer_group }} remote-as {{ router_bgp.peer_groups[peer_group].remote_as }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].local_as is arista.avd.defined %}
   neighbor {{ peer_group }} local-as {{ router_bgp.peer_groups[peer_group].local_as }} no-prepend replace-as
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].next_hop_self is arista.avd.defined(true) %}
   neighbor {{ peer_group }} next-hop-self
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].next_hop_unchanged is arista.avd.defined(true) %}
   neighbor {{ peer_group }} next-hop-unchanged
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].update_source is arista.avd.defined %}
   neighbor {{ peer_group }} update-source {{ router_bgp.peer_groups[peer_group].update_source }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].route_reflector_client is arista.avd.defined(true) %}
   neighbor {{ peer_group }} route-reflector-client
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].bfd is arista.avd.defined(true) %}
   neighbor {{ peer_group }} bfd
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].ebgp_multihop is arista.avd.defined %}
   neighbor {{ peer_group }} ebgp-multihop {{ router_bgp.peer_groups[peer_group].ebgp_multihop }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].password is arista.avd.defined %}
   neighbor {{ peer_group }} password 7 {{ router_bgp.peer_groups[peer_group].password }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].send_community is arista.avd.defined('all') %}
   neighbor {{ peer_group }} send-community
{%         elif router_bgp.peer_groups[peer_group].send_community is arista.avd.defined %}
   neighbor {{ peer_group }} send-community {{ router_bgp.peer_groups[peer_group].send_community }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].maximum_routes is arista.avd.defined %}
   neighbor {{ peer_group }} maximum-routes {{ router_bgp.peer_groups[peer_group].maximum_routes }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].weight is arista.avd.defined %}
   neighbor {{ peer_group }} weight {{ router_bgp.peer_groups[peer_group].weight }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].timers is arista.avd.defined %}
   neighbor {{ peer_group }} timers {{ router_bgp.peer_groups[peer_group].timers }}
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].route_map_in is arista.avd.defined %}
   neighbor {{ peer_group }} route-map {{ router_bgp.peer_groups[peer_group].route_map_in }} in
{%         endif %}
{%         if router_bgp.peer_groups[peer_group].route_map_out is arista.avd.defined %}
   neighbor {{ peer_group }} route-map {{ router_bgp.peer_groups[peer_group].route_map_out }} out
{%         endif %}
{%     endfor %}
{%     for neighbor_interface in router_bgp.neighbor_interfaces | arista.avd.natural_sort %}
{%         set neighbor_interface_cli = "neighbor interface " ~ neighbor_interface %}
{%         if router_bgp.neighbor_interfaces[neighbor_interface].peer_group is arista.avd.defined %}
{%             set neighbor_interface_cli = neighbor_interface_cli ~ " peer-group " ~ router_bgp.neighbor_interfaces[neighbor_interface].peer_group %}
{%         endif %}
{%         if router_bgp.neighbor_interfaces[neighbor_interface].remote_as is arista.avd.defined %}
{%             set neighbor_interface_cli = neighbor_interface_cli ~ " remote-as " ~ router_bgp.neighbor_interfaces[neighbor_interface].remote_as %}
{%         endif %}
   {{ neighbor_interface_cli }}
{%     endfor %}
{%     for neighbor in router_bgp.neighbors | arista.avd.natural_sort %}
{%         if router_bgp.neighbors[neighbor].peer_group is arista.avd.defined %}
   neighbor {{ neighbor }} peer group {{ router_bgp.neighbors[neighbor].peer_group }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].remote_as is arista.avd.defined %}
   neighbor {{ neighbor }} remote-as {{ router_bgp.neighbors[neighbor].remote_as }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].next_hop_self is arista.avd.defined(true) %}
   neighbor {{ neighbor }} next-hop-self
{%         endif %}
{%         if router_bgp.neighbors[neighbor].shutdown is arista.avd.defined(true) %}
   neighbor {{ neighbor }} shutdown
{%         endif %}
{%         if router_bgp.neighbors[neighbor].local_as is arista.avd.defined %}
   neighbor {{ neighbor }} local-as {{ router_bgp.neighbors[neighbor].local_as }} no-prepend replace-as
{%         endif %}
{%         if router_bgp.neighbors[neighbor].description is arista.avd.defined %}
   neighbor {{ neighbor }} description {{ router_bgp.neighbors[neighbor].description }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].update_source is arista.avd.defined %}
   neighbor {{ neighbor }} update-source {{ router_bgp.neighbors[neighbor].update_source }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].bfd is arista.avd.defined(true) %}
   neighbor {{ neighbor }} bfd
{%         endif %}
{%         if router_bgp.neighbors[neighbor].password is arista.avd.defined %}
   neighbor {{ neighbor }} password 7 {{ router_bgp.neighbors[neighbor].password }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].weight is arista.avd.defined %}
   neighbor {{ neighbor }} weight {{ router_bgp.neighbors[neighbor].weight }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].timers is arista.avd.defined %}
   neighbor {{ neighbor }} timers {{ router_bgp.neighbors[neighbor].timers }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].route_map_in is arista.avd.defined %}
   neighbor {{ neighbor }} route-map {{ router_bgp.neighbors[neighbor].route_map_in }} in
{%         endif %}
{%         if router_bgp.neighbors[neighbor].route_map_out is arista.avd.defined %}
   neighbor {{ neighbor }} route-map {{ router_bgp.neighbors[neighbor].route_map_out }} out
{%         endif %}
{%         if router_bgp.neighbors[neighbor].send_community is arista.avd.defined('all') %}
   neighbor {{ neighbor }} send-community
{%         elif router_bgp.neighbors[neighbor].send_community is arista.avd.defined %}
   neighbor {{ neighbor }} send-community {{ router_bgp.neighbors[neighbor].send_community }}
{%         endif %}
{%         if router_bgp.neighbors[neighbor].maximum_routes is arista.avd.defined %}
   neighbor {{ neighbor }} maximum-routes {{ router_bgp.neighbors[neighbor].maximum_routes }}
{%         endif %}
{%     endfor %}
{%     for aggregate_address in router_bgp.aggregate_addresses | arista.avd.natural_sort %}
{%         set aggregate_address_cli = "aggregate-address " ~ aggregate_address %}
{%         if router_bgp.aggregate_addresses[aggregate_address].as_set is arista.avd.defined(true) %}
{%             set aggregate_address_cli = aggregate_address_cli ~ " as-set" %}
{%         endif %}
{%         if router_bgp.aggregate_addresses[aggregate_address].summary_only is arista.avd.defined(true) %}
{%             set aggregate_address_cli = aggregate_address_cli ~ " summary-only" %}
{%         endif %}
{%         if router_bgp.aggregate_addresses[aggregate_address].attribute_map is arista.avd.defined %}
{%             set aggregate_address_cli = aggregate_address_cli ~  " attribute-map " ~ router_bgp.aggregate_addresses[aggregate_address].attribute_map %}
{%         endif %}
{%         if router_bgp.aggregate_addresses[aggregate_address].match_map is arista.avd.defined %}
{%             set aggregate_address_cli = aggregate_address_cli ~ " match-map " ~ router_bgp.aggregate_addresses[aggregate_address].match_map %}
{%         endif %}
{%         if router_bgp.aggregate_addresses[aggregate_address].advertise_only is arista.avd.defined(true) %}
{%             set aggregate_address_cli = aggregate_address_cli ~ " advertise-only" %}
{%         endif %}
   {{ aggregate_address_cli }}
{%     endfor %}
{%     for redistribute_route in router_bgp.redistribute_routes | arista.avd.natural_sort %}
{%         set redistribute_route_cli = "redistribute " ~ redistribute_route %}
{%         if router_bgp.redistribute_routes[redistribute_route].route_map is arista.avd.defined %}
{%             set redistribute_route_cli = redistribute_route_cli ~ " route-map " ~ router_bgp.redistribute_routes[redistribute_route].route_map %}
{%         endif %}
   {{ redistribute_route_cli }}
{%     endfor %}
{# L2VPNs - (vxlan) vlan based #}
{%     for vlan in router_bgp.vlans | arista.avd.natural_sort %}
   !
   vlan {{ vlan }}
{%         if router_bgp.vlans[vlan].rd is arista.avd.defined %}
      rd {{ router_bgp.vlans[vlan].rd }}
{%         endif %}
{%         if router_bgp.vlans[vlan].rd_evpn_domain.domain is arista.avd.defined and router_bgp.vlans[vlan].rd_evpn_domain.rd is arista.avd.defined %}
      rd evpn domain {{ router_bgp.vlans[vlan].rd_evpn_domain.domain }} {{ router_bgp.vlans[vlan].rd_evpn_domain.rd }}
{%         endif %}
{%         for route_target in router_bgp.vlans[vlan].route_targets.both | arista.avd.natural_sort %}
      route-target both {{ route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlans[vlan].route_targets.import | arista.avd.natural_sort %}
      route-target import {{ route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlans[vlan].route_targets.export | arista.avd.natural_sort %}
      route-target export {{ route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlans[vlan].route_targets.import_evpn_domains | arista.avd.natural_sort %}
      route-target import evpn domain {{ route_target.domain }} {{ route_target.route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlans[vlan].route_targets.export_evpn_domains | arista.avd.natural_sort %}
      route-target export evpn domain {{ route_target.domain }} {{ route_target.route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlans[vlan].route_targets.import_export_evpn_domains | arista.avd.natural_sort %}
      route-target import export evpn domain {{ route_target.domain }} {{ route_target.route_target }}
{%         endfor %}
{%         for redistribute_route in router_bgp.vlans[vlan].redistribute_routes | arista.avd.natural_sort %}
      redistribute {{ redistribute_route }}
{%         endfor %}
{%     endfor %}
{# vxlan vlan aware bundles #}
{%     for vlan_aware_bundle in router_bgp.vlan_aware_bundles | arista.avd.natural_sort %}
   !
   vlan-aware-bundle {{ vlan_aware_bundle }}
{%         if router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd is arista.avd.defined %}
      rd {{ router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd }}
{%         endif %}
{%         if router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd_evpn_domain.domain is arista.avd.defined and router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd_evpn_domain.rd is arista.avd.defined %}
      rd evpn domain {{ router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd_evpn_domain.domain }} {{ router_bgp.vlan_aware_bundles[vlan_aware_bundle].rd_evpn_domain.rd }}
{%         endif %}
{%         for route_target in router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.both | arista.avd.natural_sort %}
      route-target both {{ route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.import | arista.avd.natural_sort %}
      route-target import {{ route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.export | arista.avd.natural_sort %}
      route-target export {{ route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.import_evpn_domains | arista.avd.natural_sort %}
      route-target import evpn domain {{ route_target.domain }} {{ route_target.route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.export_evpn_domains | arista.avd.natural_sort %}
      route-target export evpn domain {{ route_target.domain }} {{ route_target.route_target }}
{%         endfor %}
{%         for route_target in router_bgp.vlan_aware_bundles[vlan_aware_bundle].route_targets.import_export_evpn_domains | arista.avd.natural_sort %}
      route-target import export evpn domain {{ route_target.domain }} {{ route_target.route_target }}
{%         endfor %}
{%         for redistribute_route in router_bgp.vlan_aware_bundles[vlan_aware_bundle].redistribute_routes | arista.avd.natural_sort %}
      redistribute {{ redistribute_route }}
{%         endfor %}
      vlan {{ router_bgp.vlan_aware_bundles[vlan_aware_bundle].vlan }}
{%     endfor %}
{# bgp vpws services #}
{%     if router_bgp.vpws is arista.avd.defined %}
{%         for vpws_service in router_bgp.vpws | arista.avd.natural_sort("name") %}
   !
{%             if vpws_service.name is arista.avd.defined %}
   vpws {{ vpws_service.name }}
{%                 if vpws_service.rd is arista.avd.defined %}
      rd {{ vpws_service.rd }}
{%                 endif %}
{%                 if vpws_service.route_targets.import_export is arista.avd.defined %}
      route-target import export evpn {{ vpws_service.route_targets.import_export }}
{%                 endif %}
{%                 for pw in vpws_service.pseudowires | arista.avd.natural_sort %}
{%                     if pw.name is arista.avd.defined and pw.id_local is arista.avd.defined and pw.id_remote is arista.avd.defined %}
      !
      pseudowire {{ pw.name }}
         evpn vpws id local {{ pw.id_local }} remote {{ pw.id_remote }}
{%                     endif %}
{%                 endfor %}
{%             endif %}
{%         endfor %}
{%     endif %}
{# address families activation #}
{# address family evpn activation #}
{%     if router_bgp.address_family_evpn is arista.avd.defined %}
   !
   address-family evpn
{%         if router_bgp.address_family_evpn.evpn_hostflap_detection.enabled is arista.avd.defined(false) %}
      no host-flap detection
{%         else %}
{%             if router_bgp.address_family_evpn.evpn_hostflap_detection.window is arista.avd.defined %}
      host-flap detection window {{ router_bgp.address_family_evpn.evpn_hostflap_detection.window }}
{%             endif %}
{%             if router_bgp.address_family_evpn.evpn_hostflap_detection.threshold is arista.avd.defined %}
      host-flap detection threshold {{ router_bgp.address_family_evpn.evpn_hostflap_detection.threshold }}
{%             endif %}
{%         endif %}
{%         if router_bgp.address_family_evpn.domain_identifier is arista.avd.defined %}
      domain identifier {{ router_bgp.address_family_evpn.domain_identifier }}
{%         endif %}
{%         if router_bgp.address_family_evpn.neighbor_default.encapsulation is arista.avd.defined("mpls") %}
{%             set evpn_neighbor_default_encap_cli = "neighbor default encapsulation mpls" %}
{%             if router_bgp.address_family_evpn.neighbor_default.next_hop_self_source_interface is arista.avd.defined %}
{%                 set evpn_neighbor_default_encap_cli = evpn_neighbor_default_encap_cli ~ " next-hop-self source-interface " ~ router_bgp.address_family_evpn.neighbor_default.next_hop_self_source_interface %}
{%             endif %}
      {{ evpn_neighbor_default_encap_cli }}
{%         endif %}
{%         for peer_group in router_bgp.address_family_evpn.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_evpn.peer_groups[peer_group].route_map_in is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_evpn.peer_groups[peer_group].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_evpn.peer_groups[peer_group].route_map_out is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_evpn.peer_groups[peer_group].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_evpn.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_evpn.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%             if router_bgp.address_family_evpn.peer_groups[peer_group].domain_remote is arista.avd.defined(true) %}
      neighbor {{ peer_group }} domain remote
{%             endif %}
{%         endfor %}
{%         if router_bgp.address_family_evpn.neighbor_default.next_hop_self_received_evpn_routes.enable is arista.avd.defined(true) %}
{%             set evpn_neighbor_default_nhs_received_evpn_routes_cli = "neighbor default next-hop-self received-evpn-routes route-type ip-prefix" %}
{%             if router_bgp.address_family_evpn.neighbor_default.next_hop_self_received_evpn_routes.inter_domain is arista.avd.defined(true) %}
{%                 set evpn_neighbor_default_nhs_received_evpn_routes_cli = evpn_neighbor_default_nhs_received_evpn_routes_cli ~ " inter-domain" %}
{%             endif %}
      {{ evpn_neighbor_default_nhs_received_evpn_routes_cli }}
{%         endif %}
{%         if router_bgp.address_family_evpn.route.import_match_failure_action is arista.avd.defined('discard') %}
      route import match-failure action discard
{%         endif %}
{%     endif %}
{# address family rt-membership activation #}
{%     if router_bgp.address_family_rtc is arista.avd.defined %}
   !
   address-family rt-membership
{%         for peer_group in router_bgp.address_family_rtc.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_rtc.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_rtc.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%             if router_bgp.address_family_rtc.peer_groups[peer_group].default_route_target is defined %}
{%                 if router_bgp.address_family_rtc.peer_groups[peer_group].default_route_target.only is arista.avd.defined(true) %}
      neighbor {{ peer_group }} default-route-target only
{%                 else %}
      neighbor {{ peer_group }} default-route-target
{%                 endif %}
{%             endif %}
{%             if router_bgp.address_family_rtc.peer_groups[peer_group].default_route_target.encoding_origin_as_omit is defined %}
      neighbor {{ peer_group }} default-route-target encoding origin-as omit
{%             endif %}
{%         endfor %}
{%     endif %}
{# address family ipv4 activation #}
{%     if router_bgp.address_family_ipv4 is arista.avd.defined %}
   !
   address-family ipv4
{%         for network in router_bgp.address_family_ipv4.networks | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv4.networks[network].route_map is arista.avd.defined %}
      network {{ network }} route-map {{ router_bgp.address_family_ipv4.networks[network].route_map }}
{%             else %}
      network {{ network }}
{%             endif %}
{%         endfor %}
{%         for peer_group in router_bgp.address_family_ipv4.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].route_map_in is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_ipv4.peer_groups[peer_group].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].route_map_out is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_ipv4.peer_groups[peer_group].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].prefix_list_in is arista.avd.defined %}
      neighbor {{ peer_group }} prefix-list {{ router_bgp.address_family_ipv4.peer_groups[peer_group].prefix_list_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].prefix_list_out is arista.avd.defined %}
      neighbor {{ peer_group }} prefix-list {{ router_bgp.address_family_ipv4.peer_groups[peer_group].prefix_list_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].default_originate is arista.avd.defined %}
{%                set neighbor_default_originate_cli = "neighbor " ~ peer_group ~ " default-originate" %}
{%                if router_bgp.address_family_ipv4.peer_groups[peer_group].default_originate.route_map is arista.avd.defined %}
{%                    set neighbor_default_originate_cli = neighbor_default_originate_cli ~ " route-map " ~ router_bgp.address_family_ipv4.peer_groups[peer_group].default_originate.route_map %}
{%                endif %}
{%                if router_bgp.address_family_ipv4.peer_groups[peer_group].default_originate.always is arista.avd.defined(true) %}
{%                     set neighbor_default_originate_cli = neighbor_default_originate_cli ~ " always" %}
{%                endif %}
      {{ neighbor_default_originate_cli }}
{%             endif%}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].next_hop.address_family_ipv6_originate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} next-hop address-family ipv6 originate
{%             endif %}
{%             if router_bgp.address_family_ipv4.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_ipv4.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%         endfor %}
{%         for neighbor in router_bgp.address_family_ipv4.neighbors | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv4.neighbors[neighbor].route_map_in is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.address_family_ipv4.neighbors[neighbor].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv4.neighbors[neighbor].route_map_out is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.address_family_ipv4.neighbors[neighbor].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv4.neighbors[neighbor].prefix_list_in is arista.avd.defined %}
      neighbor {{ neighbor }} prefix-list {{ router_bgp.address_family_ipv4.neighbors[neighbor].prefix_list_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv4.neighbors[neighbor].prefix_list_out is arista.avd.defined %}
      neighbor {{ neighbor }} prefix-list {{ router_bgp.address_family_ipv4.neighbors[neighbor].prefix_list_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv4.neighbors[neighbor].default_originate is arista.avd.defined %}
{%                 set neighbor_default_originate_cli = "neighbor " ~ neighbor ~ " default-originate" %}
{%                 if router_bgp.address_family_ipv4.neighbors[neighbor].default_originate.route_map is arista.avd.defined %}
{%                     set neighbor_default_originate_cli = neighbor_default_originate_cli ~ " route-map " ~ router_bgp.address_family_ipv4.neighbors[neighbor].default_originate.route_map %}
{%                 endif %}
{%                 if router_bgp.address_family_ipv4.neighbors[neighbor].default_originate.always is arista.avd.defined(true) %}
{%                     set neighbor_default_originate_cli = neighbor_default_originate_cli ~ " always" %}
{%                 endif %}
      {{ neighbor_default_originate_cli }}
{%             endif %}
{%             if router_bgp.address_family_ipv4.neighbors[neighbor].activate is arista.avd.defined(true) %}
      neighbor {{ neighbor }} activate
{%             elif router_bgp.address_family_ipv4.neighbors[neighbor].activate is arista.avd.defined(false) %}
      no neighbor {{ neighbor }} activate
{%             endif %}
{%         endfor %}
{%     endif %}
{# address family ipv4 multicast activation #}
{%     if router_bgp.address_family_ipv4_multicast is arista.avd.defined %}
   !
   address-family ipv4 multicast
{%         for peer_group in router_bgp.address_family_ipv4_multicast.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv4_multicast.peer_groups[peer_group].route_map_in is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_ipv4_multicast.peer_groups[peer_group].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv4_multicast.peer_groups[peer_group].route_map_out is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_ipv4_multicast.peer_groups[peer_group].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv4_multicast.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_ipv4_multicast.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%         endfor %}
{%         for neighbor in router_bgp.address_family_ipv4_multicast.neighbors | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv4_multicast.neighbors[neighbor].route_map_in is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.address_family_ipv4_multicast.neighbors[neighbor].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv4_multicast.neighbors[neighbor].route_map_out is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.address_family_ipv4_multicast.neighbors[neighbor].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv4_multicast.neighbors[neighbor].activate is arista.avd.defined(true) %}
      neighbor {{ neighbor }} activate
{%             elif router_bgp.address_family_ipv4_multicast.neighbors[neighbor].activate is arista.avd.defined(false) %}
      no neighbor {{ neighbor }} activate
{%             endif %}
{%         endfor %}
{%         for redistribute_route in router_bgp.address_family_ipv4_multicast.redistribute_routes | arista.avd.natural_sort %}
{%             set redistribute_route_cli = "redistribute " ~ redistribute_route %}
{%             if router_bgp.address_family_ipv4_multicast.redistribute_routes[redistribute_route].route_map is arista.avd.defined %}
{%                 set redistribute_route_cli = redistribute_route_cli ~ " route-map " ~ router_bgp.address_family_ipv4_multicast.redistribute_routes[redistribute_route].route_map %}
{%             endif %}
      {{ redistribute_route_cli }}
{%         endfor %}
{%     endif %}
{# address family ipv6 activation #}
{%     if router_bgp.address_family_ipv6 is arista.avd.defined %}
   !
   address-family ipv6
{%         for network in router_bgp.address_family_ipv6.networks | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv6.networks[network].route_map is arista.avd.defined %}
      network {{ network }} route-map {{ router_bgp.address_family_ipv6.networks[network].route_map }}
{%             else %}
      network {{ network }}
{%             endif %}
{%         endfor %}
{%         for peer_group in router_bgp.address_family_ipv6.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv6.peer_groups[peer_group].route_map_in is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_ipv6.peer_groups[peer_group].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv6.peer_groups[peer_group].route_map_out is arista.avd.defined %}
      neighbor {{ peer_group }} route-map {{ router_bgp.address_family_ipv6.peer_groups[peer_group].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv6.peer_groups[peer_group].prefix_list_in is arista.avd.defined %}
      neighbor {{ peer_group }} prefix-list {{ router_bgp.address_family_ipv6.peer_groups[peer_group].prefix_list_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv6.peer_groups[peer_group].prefix_list_out is arista.avd.defined %}
      neighbor {{ peer_group }} prefix-list {{ router_bgp.address_family_ipv6.peer_groups[peer_group].prefix_list_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv6.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_ipv6.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%         endfor %}
{%         for neighbor in router_bgp.address_family_ipv6.neighbors | arista.avd.natural_sort %}
{%             if router_bgp.address_family_ipv6.neighbors[neighbor].route_map_in is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.address_family_ipv6.neighbors[neighbor].route_map_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv6.neighbors[neighbor].route_map_out is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.address_family_ipv6.neighbors[neighbor].route_map_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv6.neighbors[neighbor].prefix_list_in is arista.avd.defined %}
      neighbor {{ neighbor }} prefix-list {{ router_bgp.address_family_ipv6.neighbors[neighbor].prefix_list_in }} in
{%             endif %}
{%             if router_bgp.address_family_ipv6.neighbors[neighbor].prefix_list_out is arista.avd.defined %}
      neighbor {{ neighbor }} prefix-list {{ router_bgp.address_family_ipv6.neighbors[neighbor].prefix_list_out }} out
{%             endif %}
{%             if router_bgp.address_family_ipv6.neighbors[neighbor].activate is arista.avd.defined(true) %}
      neighbor {{ neighbor }} activate
{%             elif router_bgp.address_family_ipv6.neighbors[neighbor].activate is arista.avd.defined(false) %}
      no neighbor {{ neighbor }} activate
{%             endif %}
{%         endfor %}
{%         for redistribute_route in router_bgp.address_family_ipv6.redistribute_routes | arista.avd.natural_sort %}
{%             set redistribute_route_cli = "redistribute " ~ redistribute_route %}
{%             if router_bgp.address_family_ipv6.redistribute_routes[redistribute_route].route_map is arista.avd.defined %}
{%                 set redistribute_route_cli = redistribute_route_cl ~ " route-map " ~ router_bgp.address_family_ipv6.redistribute_routes[redistribute_route].route_map %}
{%             endif %}
      {{ redistribute_route_cli }}
{%         endfor %}
{%     endif %}
{# address family vpn-ipv4 activation #}
{%     if router_bgp.address_family_vpn_ipv4 is arista.avd.defined %}
   !
   address-family vpn-ipv4
{%         if router_bgp.address_family_vpn_ipv4.domain_identifier is arista.avd.defined %}
      domain identifier {{ router_bgp.address_family_vpn_ipv4.domain_identifier }}
{%         endif %}
{%         for peer_group in router_bgp.address_family_vpn_ipv4.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_vpn_ipv4.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_vpn_ipv4.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%         endfor %}
{%         for neighbor in router_bgp.address_family_vpn_ipv4.neighbors | arista.avd.natural_sort %}
{%             if router_bgp.address_family_vpn_ipv4.neighbors[neighbor].activate is arista.avd.defined(true) %}
      neighbor {{ neighbor }} activate
{%             elif router_bgp.address_family_vpn_ipv4.neighbors[neighbor].activate is arista.avd.defined(false) %}
      no neighbor {{ neighbor }} activate
{%             endif %}
{%         endfor %}
{%         if router_bgp.address_family_vpn_ipv4.neighbor_default_encapsulation_mpls_next_hop_self.source_interface is arista.avd.defined %}
      neighbor default encapsulation mpls next-hop-self source-interface {{ router_bgp.address_family_vpn_ipv4.neighbor_default_encapsulation_mpls_next_hop_self.source_interface }}
{%         endif %}
{%     endif %}
{# address family vpn-ipv6 activation #}
{%     if router_bgp.address_family_vpn_ipv6 is arista.avd.defined %}
   !
   address-family vpn-ipv6
{%         if router_bgp.address_family_vpn_ipv6.domain_identifier is arista.avd.defined %}
      domain identifier {{ router_bgp.address_family_vpn_ipv6.domain_identifier }}
{%         endif %}
{%         for peer_group in router_bgp.address_family_vpn_ipv6.peer_groups | arista.avd.natural_sort %}
{%             if router_bgp.address_family_vpn_ipv6.peer_groups[peer_group].activate is arista.avd.defined(true) %}
      neighbor {{ peer_group }} activate
{%             elif router_bgp.address_family_vpn_ipv6.peer_groups[peer_group].activate is arista.avd.defined(false) %}
      no neighbor {{ peer_group }} activate
{%             endif %}
{%         endfor %}
{%         for neighbor in router_bgp.address_family_vpn_ipv6.neighbors | arista.avd.natural_sort %}
{%             if router_bgp.address_family_vpn_ipv6.neighbors[neighbor].activate is arista.avd.defined(true) %}
      neighbor {{ neighbor }} activate
{%             elif router_bgp.address_family_vpn_ipv6.neighbors[neighbor].activate is arista.avd.defined(false) %}
      no neighbor {{ neighbor }} activate
{%             endif %}
{%         endfor %}
{%         if router_bgp.address_family_vpn_ipv6.neighbor_default_encapsulation_mpls_next_hop_self.source_interface is arista.avd.defined %}
      neighbor default encapsulation mpls next-hop-self source-interface {{ router_bgp.address_family_vpn_ipv6.neighbor_default_encapsulation_mpls_next_hop_self.source_interface }}
{%         endif %}
{%     endif %}
{# L3VPNs - (vxlan) VRFs #}
{%     for vrf in router_bgp.vrfs | arista.avd.natural_sort %}
   !
   vrf {{ vrf }}
{%         if router_bgp.vrfs[vrf].rd is arista.avd.defined %}
      rd {{ router_bgp.vrfs[vrf].rd }}
{%         endif %}
{%         if router_bgp.vrfs[vrf].evpn_multicast is arista.avd.defined(true) %}
      evpn multicast
{%         endif %}
{%         if router_bgp.vrfs[vrf].route_targets.import is arista.avd.defined %}
{%             for address_family in router_bgp.vrfs[vrf].route_targets.import %}
{%                 for route_target in router_bgp.vrfs[vrf].route_targets.import[address_family] %}
      route-target import {{ address_family }} {{ route_target }}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%         if router_bgp.vrfs[vrf].route_targets.export is arista.avd.defined %}
{%             for address_family in router_bgp.vrfs[vrf].route_targets.export %}
{%                 for route_target in router_bgp.vrfs[vrf].route_targets.export[address_family] %}
      route-target export {{ address_family }} {{ route_target }}
{%                 endfor %}
{%             endfor %}
{%         endif %}
{%         if router_bgp.vrfs[vrf].router_id is arista.avd.defined %}
      router-id {{ router_bgp.vrfs[vrf].router_id }}
{%         endif %}
{%         if router_bgp.vrfs[vrf].timers is arista.avd.defined %}
      timers bgp {{ router_bgp.vrfs[vrf].timers }}
{%         endif %}
{%         for network in router_bgp.vrfs[vrf].networks | arista.avd.natural_sort %}
{%             if router_bgp.vrfs[vrf].networks[network].route_map is arista.avd.defined %}
      network {{ network }} route-map {{ router_bgp.vrfs[vrf].networks[network].route_map }}
{%             else %}
      network {{ network }}
{%             endif %}
{%         endfor %}
{%         for neighbor in router_bgp.vrfs[vrf].neighbors | arista.avd.natural_sort %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].remote_as is arista.avd.defined %}
      neighbor {{ neighbor }} remote-as {{ router_bgp.vrfs[vrf].neighbors[neighbor].remote_as }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].peer_group is arista.avd.defined %}
      neighbor {{ neighbor }} peer group {{ router_bgp.vrfs[vrf].neighbors[neighbor].peer_group }}
{%             endif %}
{%         if router_bgp.vrfs[vrf].neighbors[neighbor].password is arista.avd.defined %}
      neighbor {{ neighbor }} password 7 {{ router_bgp.vrfs[vrf].neighbors[neighbor].password }}
{%         endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].weight is arista.avd.defined %}
      neighbor {{ neighbor }} weight {{ router_bgp.vrfs[vrf].neighbors[neighbor].weight }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].local_as is arista.avd.defined %}
      neighbor {{ neighbor }} local-as {{ router_bgp.vrfs[vrf].neighbors[neighbor].local_as }} no-prepend replace-as
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].description is arista.avd.defined %}
      neighbor {{ neighbor }} description {{ router_bgp.vrfs[vrf].neighbors[neighbor].description }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].ebgp_multihop is arista.avd.defined %}
{%                 set neighbor_ebgp_multihop_cli = "neighbor " ~ neighbor ~ " ebgp-multihop" %}
{%                 if router_bgp.vrfs[vrf].neighbors[neighbor].ebgp_multihop is number %}
{%                     set neighbor_ebgp_multihop_cli = neighbor_ebgp_multihop_cli ~ " " ~ router_bgp.vrfs[vrf].neighbors[neighbor].ebgp_multihop %}
{%                 endif %}
      {{ neighbor_ebgp_multihop_cli }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].next_hop_self is arista.avd.defined(true) %}
      neighbor {{ neighbor }} next-hop-self
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].timers is arista.avd.defined %}
      neighbor {{ neighbor }} timers {{ router_bgp.vrfs[vrf].neighbors[neighbor].timers }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].send_community is arista.avd.defined('all') %}
      neighbor {{ neighbor }} send-community
{%             elif router_bgp.vrfs[vrf].neighbors[neighbor].send_community is arista.avd.defined %}
      neighbor {{ neighbor }} send-community {{ router_bgp.vrfs[vrf].neighbors[neighbor].send_community }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].maximum_routes is arista.avd.defined %}
      neighbor {{ neighbor }} maximum-routes {{ router_bgp.vrfs[vrf].neighbors[neighbor].maximum_routes }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].default_originate is arista.avd.defined %}
{%                 set neighbor_default_originate_cli = "neighbor " ~ neighbor ~ " default-originate" %}
{%                 if router_bgp.vrfs[vrf].neighbors[neighbor].default_originate.route_map is arista.avd.defined %}
{%                     set neighbor_default_originate_cli = neighbor_default_originate_cli ~ " route-map " ~ router_bgp.vrfs[vrf].neighbors[neighbor].default_originate.route_map %}
{%                 endif %}
{%                 if router_bgp.vrfs[vrf].neighbors[neighbor].default_originate.always is arista.avd.defined(true) %}
{%                     set neighbor_default_originate_cli = neighbor_default_originate_cli ~ " always" %}
{%                 endif %}
      {{ neighbor_default_originate_cli }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].update_source is arista.avd.defined %}
      neighbor {{ neighbor }} update-source {{ router_bgp.vrfs[vrf].neighbors[neighbor].update_source }}
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].route_map_out is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.vrfs[vrf].neighbors[neighbor].route_map_out }} out
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].route_map_in is arista.avd.defined %}
      neighbor {{ neighbor }} route-map {{ router_bgp.vrfs[vrf].neighbors[neighbor].route_map_in }} in
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].prefix_list_in is arista.avd.defined %}
      neighbor {{ neighbor }} prefix-list {{ router_bgp.vrfs[vrf].neighbors[neighbor].prefix_list_in }} in
{%             endif %}
{%             if router_bgp.vrfs[vrf].neighbors[neighbor].prefix_list_out is arista.avd.defined %}
      neighbor {{ neighbor }} prefix-list {{ router_bgp.vrfs[vrf].neighbors[neighbor].prefix_list_out }} out
{%             endif %}
{%         endfor %}
{%         for redistribute_route in router_bgp.vrfs[vrf].redistribute_routes | arista.avd.natural_sort %}
{%             set redistribute_cli = "redistribute " ~ redistribute_route %}
{%             if router_bgp.vrfs[vrf].redistribute_routes[redistribute_route].route_map is arista.avd.defined %}
{%                 set redistribute_cli = redistribute_cli + " route-map " ~ router_bgp.vrfs[vrf].redistribute_routes[redistribute_route].route_map %}
{%            endif %}
      {{ redistribute_cli }}
{%         endfor %}
{%         for aggregate_address in router_bgp.vrfs[vrf].aggregate_addresses | arista.avd.natural_sort %}
{%             set aggregate_address_cli = "aggregate-address " ~ aggregate_address %}
{%             if router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].as_set is arista.avd.defined(true) %}
{%                 set  aggregate_address_cli = aggregate_address_cli ~ " as-set" %}
{%             endif %}
{%             if router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].summary_only is arista.avd.defined(true) %}
{%                  set aggregate_address_cli = aggregate_address_cli ~ " summary-only" %}
{%             endif %}
{%             if router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].attribute_map is arista.avd.defined %}
{%                 set aggregate_address_cli = aggregate_address_cli ~ " attribute-map " ~ router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].attribute_map %}
{%             endif %}
{%             if router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].match_map is arista.avd.defined %}
{%                 set aggregate_address_cli = aggregate_address_cli ~ " match-map " ~ router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].match_map %}
{%             endif %}
{%             if router_bgp.vrfs[vrf].aggregate_addresses[aggregate_address].advertise_only is arista.avd.defined(true) %}
{%                 set aggregate_address_cli = aggregate_address_cli ~ " advertise-only" %}
{%             endif %}
      {{ aggregate_address_cli }}
{%         endfor %}
{%         for  address_family in router_bgp.vrfs[vrf].address_families | arista.avd.natural_sort %}
      !
      address-family {{ address_family }}
{%             for neighbor in router_bgp.vrfs[vrf].address_families[address_family].neighbors | arista.avd.natural_sort %}
{%                 if router_bgp.vrfs[vrf].address_families[address_family].neighbors[neighbor].activate is arista.avd.defined(true) %}
         neighbor {{ neighbor }} activate
{%                 endif %}
{%             endfor %}
{%             for network in router_bgp.vrfs[vrf].address_families[address_family].networks | arista.avd.natural_sort %}
{%                 set network_cli = "network " ~ network %}
{%                 if router_bgp.vrfs[vrf].address_families[address_family].networks[network].route_map is arista.avd.defined %}
{%                     set network_cli = network_cli ~ " route-map " ~ router_bgp.vrfs[vrf].address_families[address_family].networks[network].route_map %}
{%                 endif %}
         {{ network_cli }}
{%             endfor %}
{%         endfor %}
{%         if router_bgp.vrfs[vrf].eos_cli is arista.avd.defined %}
      !
      {{ router_bgp.vrfs[vrf].eos_cli | indent(6, false) }}
{%         endif %}
{%     endfor %}
{% endif %}
