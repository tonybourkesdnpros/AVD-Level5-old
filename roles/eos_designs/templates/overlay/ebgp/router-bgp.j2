router_bgp:

  peer_groups:
    {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}:
      type: evpn
      update_source: Loopback0
      bfd: true
      ebgp_multihop: "{{ evpn_ebgp_multihop }}"
{% if bgp_peer_groups.EVPN_OVERLAY_PEERS.password is arista.avd.defined() %}
      password: "{{ bgp_peer_groups.EVPN_OVERLAY_PEERS.password }}"
{% endif %}
      send_community: all
      maximum_routes: 0
{% if switch.evpn_role == "server" %}
      next_hop_unchanged: true
{% endif %}

  address_family_ipv4:
    peer_groups:
      {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}:
        activate: false

  address_family_evpn:
    peer_groups:
      {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}:
        activate: true
{% if switch.vtep_ip is arista.avd.defined and evpn_hostflap_detection is arista.avd.defined %}
    evpn_hostflap_detection:
      window: {{ evpn_hostflap_detection.window | arista.avd.default(180) }}
      threshold: {{ evpn_hostflap_detection.threshold | arista.avd.default(5) }}
      enabled: {{ evpn_hostflap_detection.enabled | arista.avd.default(true) }}
{% endif %}
{% if switch.vtep_ip is arista.avd.defined and evpn_import_pruning is arista.avd.defined(true) %}
    route:
      import_match_failure_action: discard
{% endif %}

{% if evpn_overlay_bgp_rtc is arista.avd.defined(true) %}
  address_family_rtc:
    peer_groups:
      {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}:
        activate: true
{%     if switch.evpn_role == "server" %}
        default_route_target:
          only: true
{%     endif %}
{% endif %}

{# EBGP #}
{# Overlay network peering #}
  neighbors:
{% for evpn_route_server in overlay_data.evpn_route_servers | arista.avd.natural_sort %}
    {{ overlay_data.evpn_route_servers[evpn_route_server].ip_address }}:
      peer_group: {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}
      description: {{ evpn_route_server }}
      remote_as: "{{ overlay_data.evpn_route_servers[evpn_route_server].bgp_as }}"
{%     if evpn_prevent_readvertise_to_server is arista.avd.defined(true) %}
      route_map_out: RM-EVPN-FILTER-AS{{ overlay_data.evpn_route_servers[evpn_route_server].bgp_as }}
{%     endif %}
{% endfor %}
{% for evpn_route_client in overlay_data.evpn_route_clients | arista.avd.natural_sort %}
    {{ overlay_data.evpn_route_clients[evpn_route_client].ip_address }}:
      peer_group: {{ bgp_peer_groups.EVPN_OVERLAY_PEERS.name | arista.avd.default("EVPN-OVERLAY-PEERS") }}
      description: {{ evpn_route_client }}
      remote_as: "{{ overlay_data.evpn_route_clients[evpn_route_client].bgp_as }}"
{% endfor %}
