{# eos - Ethernet Interfaces #}
{% for ethernet_interface in ethernet_interfaces | arista.avd.natural_sort %}
!
interface {{ ethernet_interface }}
{%     if ethernet_interfaces[ethernet_interface].description is arista.avd.defined %}
   description {{ ethernet_interfaces[ethernet_interface].description }}
{%     endif %}
{%     if ethernet_interfaces[ethernet_interface].logging.event.link_status is arista.avd.defined(true) %}
   logging event link-status
{%     elif ethernet_interfaces[ethernet_interface].logging.event.link_status is arista.avd.defined(false) %}
   no logging event link-status
{%     endif %}
{%     if ethernet_interfaces[ethernet_interface].shutdown is arista.avd.defined(true) %}
   shutdown
{%     elif ethernet_interfaces[ethernet_interface].shutdown is arista.avd.defined(false) %}
   no shutdown
{%     endif %}
{%     if ethernet_interfaces[ethernet_interface].speed is arista.avd.defined %}
   speed {{ ethernet_interfaces[ethernet_interface].speed }}
{%     endif %}
{%     if ethernet_interfaces[ethernet_interface].mac_security.profile is arista.avd.defined %}
   mac security profile {{ ethernet_interfaces[ethernet_interface].mac_security.profile }}
{%     endif %}
{%     if ethernet_interfaces[ethernet_interface].channel_group.id is arista.avd.defined and ethernet_interfaces[ethernet_interface].channel_group.mode is arista.avd.defined %}
   channel-group {{ ethernet_interfaces[ethernet_interface].channel_group.id }} mode {{ ethernet_interfaces[ethernet_interface].channel_group.mode }}
{%         if ethernet_interfaces[ethernet_interface].lacp_port_priority is arista.avd.defined %}
   lacp port-priority {{ ethernet_interfaces[ethernet_interface].lacp_port_priority }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].lacp_timer.mode is arista.avd.defined %}
   lacp timer {{ ethernet_interfaces[ethernet_interface].lacp_timer.mode }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].lacp_timer.multiplier is arista.avd.defined %}
   lacp timer multiplier {{ ethernet_interfaces[ethernet_interface].lacp_timer.multiplier }}
{%         endif %}
{%         if port_channel_interfaces['Port-Channel' ~ ethernet_interfaces[ethernet_interface].channel_group.id].lacp_fallback_mode is arista.avd.defined("individual") %}
{%             set print_ethernet = true %}
{%         endif %}
{%     else %}
{%         set print_ethernet = true %}
{%     endif %}
{%     if print_ethernet is arista.avd.defined(true) %}
{%         if ethernet_interfaces[ethernet_interface].mtu is arista.avd.defined %}
   mtu {{ ethernet_interfaces[ethernet_interface].mtu }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].l2_mtu is arista.avd.defined %}
   l2 mtu {{ ethernet_interfaces[ethernet_interface].l2_mtu }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].error_correction_encoding.enabled is arista.avd.defined(false) %}
   no error-correction encoding
{%         else %}
{%             if ethernet_interfaces[ethernet_interface].error_correction_encoding.fire_code is arista.avd.defined(true) %}
   error-correction encoding fire-code
{%             elif ethernet_interfaces[ethernet_interface].error_correction_encoding.fire_code is arista.avd.defined(false) %}
   no error-correction encoding fire-code
{%             endif %}
{%             if ethernet_interfaces[ethernet_interface].error_correction_encoding.reed_solomon is arista.avd.defined(true) %}
   error-correction encoding reed-solomon
{%             elif ethernet_interfaces[ethernet_interface].error_correction_encoding.reed_solomon is arista.avd.defined(false) %}
   no error-correction encoding reed-solomon
{%             endif %}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].type is arista.avd.defined('routed') %}
   no switchport
{%         elif ethernet_interfaces[ethernet_interface].type is arista.avd.defined('l3dot1q') and ethernet_interfaces[ethernet_interface].encapsulation_dot1q_vlan is arista.avd.defined() %}
   encapsulation dot1q vlan {{ ethernet_interfaces[ethernet_interface].encapsulation_dot1q_vlan }}
{%         else %}
   switchport
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].flowcontrol.received is arista.avd.defined %}
   flowcontrol receive {{ ethernet_interfaces[ethernet_interface].flowcontrol.received }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mode is arista.avd.defined('access') or ethernet_interfaces[ethernet_interface].mode is arista.avd.defined('dot1q-tunnel') %}
{%             if ethernet_interfaces[ethernet_interface].vlans is arista.avd.defined %}
   switchport access vlan {{ ethernet_interfaces[ethernet_interface].vlans }}
{%             endif %}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mode is arista.avd.defined('trunk') %}
{%             if ethernet_interfaces[ethernet_interface].vlans is arista.avd.defined %}
   switchport trunk allowed vlan {{ ethernet_interfaces[ethernet_interface].vlans }}
{%             endif %}
{%             if ethernet_interfaces[ethernet_interface].native_vlan is arista.avd.defined %}
   switchport trunk native vlan {{ ethernet_interfaces[ethernet_interface].native_vlan }}
{%             endif %}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mode is arista.avd.defined("trunk phone") and ethernet_interfaces[ethernet_interface].native_vlan %}
   switchport trunk native vlan {{ ethernet_interfaces[ethernet_interface].native_vlan }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].phone.vlan is arista.avd.defined %}
   switchport phone vlan {{ ethernet_interfaces[ethernet_interface].phone.vlan }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].phone.trunk is arista.avd.defined %}
   switchport phone trunk {{ ethernet_interfaces[ethernet_interface].phone.trunk }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mode is arista.avd.defined %}
   switchport mode {{ ethernet_interfaces[ethernet_interface].mode }}
{%         endif %}
{%         for trunk_group in ethernet_interfaces[ethernet_interface].trunk_groups | arista.avd.natural_sort %}
   switchport trunk group {{ trunk_group }}
{%         endfor %}
{%         if ethernet_interfaces[ethernet_interface].trunk_private_vlan_secondary is arista.avd.defined(true) %}
   switchport trunk private-vlan secondary
{%         elif ethernet_interfaces[ethernet_interface].trunk_private_vlan_secondary is arista.avd.defined(false) %}
   no switchport trunk private-vlan secondary
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].pvlan_mapping is arista.avd.defined %}
   switchport pvlan mapping {{ ethernet_interfaces[ethernet_interface].pvlan_mapping }}
{%         endif %}
{%         for vlan_translation in ethernet_interfaces[ethernet_interface].vlan_translations | arista.avd.natural_sort %}
{%             if vlan_translation.from is arista.avd.defined and vlan_translation.to is arista.avd.defined %}
{%                 set vlan_translation_cli = 'switchport vlan translation' %}
{%                 if vlan_translation.direction | arista.avd.default in ['in', 'out'] %}
{%                     set vlan_translation_cli = vlan_translation_cli ~ ' ' ~ vlan_translation.direction %}
{%                 endif %}
{%                 set vlan_translation_cli = vlan_translation_cli ~ ' ' ~ vlan_translation.from %}
{%                 set vlan_translation_cli = vlan_translation_cli ~ ' ' ~ vlan_translation.to %}
   {{ vlan_translation_cli }}
{%             endif %}
{%         endfor %}
{%         if ethernet_interfaces[ethernet_interface].l2_protocol.encapsulation_dot1q_vlan is arista.avd.defined %}
   l2-protocol encapsulation dot1q vlan {{ ethernet_interfaces[ethernet_interface].l2_protocol.encapsulation_dot1q_vlan }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].qos.trust is arista.avd.defined %}
{%             if ethernet_interfaces[ethernet_interface].qos.trust == 'disabled' %}
   no qos trust
{%             else %}
   qos trust {{ ethernet_interfaces[ethernet_interface].qos.trust }}
{%             endif %}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].qos.dscp is arista.avd.defined %}
   qos dscp {{ ethernet_interfaces[ethernet_interface].qos.dscp }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].qos.cos is arista.avd.defined %}
   qos cos {{ ethernet_interfaces[ethernet_interface].qos.cos }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].spanning_tree_portfast is arista.avd.defined('edge') %}
   spanning-tree portfast
{%         elif ethernet_interfaces[ethernet_interface].spanning_tree_portfast is arista.avd.defined('network') %}
   spanning-tree portfast network
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].spanning_tree_bpdufilter is arista.avd.defined(true) %}
   spanning-tree bpdufilter enable
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].spanning_tree_bpduguard is arista.avd.defined(true) %}
   spanning-tree bpduguard enable
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].vrf is arista.avd.defined %}
   vrf {{ ethernet_interfaces[ethernet_interface].vrf }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ip_proxy_arp is arista.avd.defined(true) %}
   ip proxy-arp
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ip_address is arista.avd.defined %}
   ip address {{ ethernet_interfaces[ethernet_interface].ip_address }}
{%             if ethernet_interfaces[ethernet_interface].ip_address_secondaries is arista.avd.defined %}
{%                 for ip_address_secondary in ethernet_interfaces[ethernet_interface].ip_address_secondaries %}
   ip address {{ ip_address_secondary }} secondary
{%                 endfor %}
{%             endif %}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_enable is arista.avd.defined(true) %}
   ipv6 enable
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_address is arista.avd.defined %}
   ipv6 address {{ ethernet_interfaces[ethernet_interface].ipv6_address }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_address_link_local is arista.avd.defined %}
   ipv6 address {{ ethernet_interfaces[ethernet_interface].ipv6_address_link_local }} link-local
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_nd_ra_disabled is arista.avd.defined(true) %}
   ipv6 nd ra disabled
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_nd_managed_config_flag is arista.avd.defined(true) %}
   ipv6 nd managed-config-flag
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes is arista.avd.defined %}
{%             for prefix in ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes %}
{%                 set ipv6_nd_prefix_cli = "ipv6 nd prefix " ~ prefix %}
{%                 if ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes[prefix].valid_lifetime is arista.avd.defined() %}
{%                     set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " " ~ ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes[prefix].valid_lifetime %}
{%                     if ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes[prefix].preferred_lifetime is arista.avd.defined() %}
{%                         set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " " ~ ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes[prefix].preferred_lifetime %}
{%                     endif %}
{%                 endif %}
{%                 if ethernet_interfaces[ethernet_interface].ipv6_nd_prefixes[prefix].no_autoconfig_flag is arista.avd.defined(true) %}
{%                     set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " no-autoconfig" %}
{%                 endif %}
   {{ ipv6_nd_prefix_cli }}
{%             endfor %}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].access_group_in is arista.avd.defined %}
   ip access-group {{ ethernet_interfaces[ethernet_interface].access_group_in }} in
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].access_group_out is arista.avd.defined %}
   ip access-group {{ ethernet_interfaces[ethernet_interface].access_group_out }} out
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_access_group_in is arista.avd.defined %}
   ipv6 access-group {{ ethernet_interfaces[ethernet_interface].ipv6_access_group_in }} in
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ipv6_access_group_out is arista.avd.defined %}
   ipv6 access-group {{ ethernet_interfaces[ethernet_interface].ipv6_access_group_out }} out
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ospf_network_point_to_point is arista.avd.defined(true) %}
   ip ospf network point-to-point
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ospf_area is arista.avd.defined %}
   ip ospf area {{ ethernet_interfaces[ethernet_interface].ospf_area }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ospf_cost is arista.avd.defined %}
   ip ospf cost {{ ethernet_interfaces[ethernet_interface].ospf_cost }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ospf_authentication is arista.avd.defined('simple') %}
   ip ospf authentication
{%         elif ethernet_interfaces[ethernet_interface].ospf_authentication is arista.avd.defined('message-digest') %}
   ip ospf authentication message-digest
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ospf_authentication_key is arista.avd.defined %}
   ip ospf authentication-key 7 {{ ethernet_interfaces[ethernet_interface].ospf_authentication_key }}
{%         endif %}
{%         for ospf_message_digest_key in ethernet_interfaces[ethernet_interface].ospf_message_digest_keys | arista.avd.natural_sort %}
{%             if ethernet_interfaces[ethernet_interface].ospf_message_digest_keys[ospf_message_digest_key].hash_algorithm is arista.avd.defined and ethernet_interfaces[ethernet_interface].ospf_message_digest_keys[ospf_message_digest_key].key is arista.avd.defined %}
   ip ospf message-digest-key {{ ospf_message_digest_key }} {{ ethernet_interfaces[ethernet_interface].ospf_message_digest_keys[ospf_message_digest_key].hash_algorithm }} 7 {{ ethernet_interfaces[ethernet_interface].ospf_message_digest_keys[ospf_message_digest_key].key }}
{%             endif %}
{%         endfor %}
{%         if ethernet_interfaces[ethernet_interface].isis_enable is arista.avd.defined %}
   isis enable {{ ethernet_interfaces[ethernet_interface].isis_enable }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].isis_circuit_type is arista.avd.defined %}
   isis circuit-type {{ ethernet_interfaces[ethernet_interface].isis_circuit_type }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].isis_metric is arista.avd.defined %}
   isis metric {{ ethernet_interfaces[ethernet_interface].isis_metric }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].isis_passive is arista.avd.defined(true) %}
   isis passive
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].isis_network_point_to_point is arista.avd.defined(true) %}
   isis network point-to-point
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].pim.ipv4.sparse_mode is arista.avd.defined(true) %}
   pim ipv4 sparse-mode
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].vmtracer is arista.avd.defined(true) %}
   vmtracer vmware-esx
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.enable is arista.avd.defined(true) %}
   ptp enable
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.announce.interval is arista.avd.defined %}
   ptp announce interval {{ ethernet_interfaces[ethernet_interface].ptp.announce.interval }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.announce.timeout is arista.avd.defined %}
   ptp announce timeout {{ ethernet_interfaces[ethernet_interface].ptp.announce.timeout }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.delay_req is arista.avd.defined %}
   ptp delay-req interval {{ ethernet_interfaces[ethernet_interface].ptp.delay_req }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.delay_mechanism is arista.avd.defined %}
   ptp delay-mechanism {{ ethernet_interfaces[ethernet_interface].ptp.delay_mechanism }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.sync_message.interval is arista.avd.defined %}
   ptp sync-message interval {{ ethernet_interfaces[ethernet_interface].ptp.sync_message.interval }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.role is arista.avd.defined %}
   ptp role {{ ethernet_interfaces[ethernet_interface].ptp.role }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.vlan is arista.avd.defined %}
   ptp vlan {{ ethernet_interfaces[ethernet_interface].ptp.vlan }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].ptp.transport is arista.avd.defined %}
   ptp transport {{ ethernet_interfaces[ethernet_interface].ptp.transport }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].service_profile is arista.avd.defined %}
   service-profile {{ ethernet_interfaces[ethernet_interface].service_profile }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].profile is arista.avd.defined %}
   profile {{ ethernet_interfaces[ethernet_interface].profile }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].lldp.transmit is arista.avd.defined(false) %}
   no lldp transmit
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].lldp.receive is arista.avd.defined(false) %}
   no lldp receive
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].shape.rate is arista.avd.defined %}
   shape rate {{ ethernet_interfaces[ethernet_interface].shape.rate }}
{%         endif %}
{%         for section in ethernet_interfaces[ethernet_interface].storm_control | arista.avd.natural_sort %}
{%             if ethernet_interfaces[ethernet_interface].storm_control[section].level is arista.avd.defined %}
{%                 if ethernet_interfaces[ethernet_interface].storm_control[section].unit is arista.avd.defined('pps') %}
   storm-control {{ section | replace("_", "-") }} level pps {{ ethernet_interfaces[ethernet_interface].storm_control[section].level }}
{%                 else %}
   storm-control {{ section | replace("_", "-") }} level {{ ethernet_interfaces[ethernet_interface].storm_control[section].level }}
{%                 endif %}
{%             endif %}
{%         endfor %}
{%         if ethernet_interfaces[ethernet_interface].bfd.interval is arista.avd.defined and
              ethernet_interfaces[ethernet_interface].bfd.min_rx is arista.avd.defined and
              ethernet_interfaces[ethernet_interface].bfd.multiplier is arista.avd.defined %}
   bfd interval {{ ethernet_interfaces[ethernet_interface].bfd.interval }} min-rx {{ ethernet_interfaces[ethernet_interface].bfd.min_rx }} multiplier {{ ethernet_interfaces[ethernet_interface].bfd.multiplier }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].service_policy.pbr.input is arista.avd.defined %}
   service-policy type pbr input {{ ethernet_interfaces[ethernet_interface].service_policy.pbr.input }}
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mpls.ip is arista.avd.defined(true) %}
   mpls ip
{%         elif ethernet_interfaces[ethernet_interface].mpls.ip is arista.avd.defined(false) %}
   no mpls ip
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mpls.ldp.interface is arista.avd.defined(true) %}
   mpls ldp interface
{%         elif ethernet_interfaces[ethernet_interface].mpls.ldp.interface is arista.avd.defined(false) %}
   no mpls ldp interface
{%         endif %}
{%         if ethernet_interfaces[ethernet_interface].mpls.ldp.igp_sync is arista.avd.defined(true) %}
   mpls ldp igp sync
{%         endif %}
{%     endif %}
{%     if ethernet_interfaces[ethernet_interface].transceiver.media.override is arista.avd.defined %}
   transceiver media override {{ ethernet_interfaces[ethernet_interface].transceiver.media.override }}
{%     endif %}
{%     for link_tracking_group in ethernet_interfaces[ethernet_interface].link_tracking_groups | arista.avd.natural_sort('name') %}
{%         if link_tracking_group.name is arista.avd.defined and link_tracking_group.direction is arista.avd.defined %}
   link tracking group {{ link_tracking_group.name }} {{ link_tracking_group.direction }}
{%         endif %}
{%     endfor %}
{%     if ethernet_interfaces[ethernet_interface].eos_cli is arista.avd.defined %}
   {{ ethernet_interfaces[ethernet_interface].eos_cli | indent(3, false) }}
{%     endif %}
{% endfor %}
