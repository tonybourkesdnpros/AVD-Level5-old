{# eos - VLAN Interfaces #}
{% for vlan_interface in vlan_interfaces | arista.avd.natural_sort %}
!
interface {{ vlan_interface }}
{%     if vlan_interfaces[vlan_interface].description is arista.avd.defined %}
   description {{ vlan_interfaces[vlan_interface].description }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].shutdown is arista.avd.defined(true) %}
   shutdown
{%     elif vlan_interfaces[vlan_interface].shutdown is arista.avd.defined(false) %}
   no shutdown
{%     endif %}
{%     if vlan_interfaces[vlan_interface].mtu is arista.avd.defined %}
   mtu {{ vlan_interfaces[vlan_interface].mtu }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].no_autostate is arista.avd.defined(true) %}
   no autostate
{%     endif %}
{%     if vlan_interfaces[vlan_interface].vrf is arista.avd.defined %}
   vrf {{ vlan_interfaces[vlan_interface].vrf }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].arp_aging_timeout is arista.avd.defined %}
   arp aging timeout {{ vlan_interfaces[vlan_interface].arp_aging_timeout }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].arp_gratuitous_accept is arista.avd.defined(true) %}
   arp gratuitous accept
{%     endif %}
{%     if vlan_interfaces[vlan_interface].arp_monitor_mac_address is arista.avd.defined(true) %}
   arp monitor mac-address
{%     endif %}
{%     if vlan_interfaces[vlan_interface].arp_cache_dynamic_capacity is arista.avd.defined %}
   arp cache dynamic capacity {{ vlan_interfaces[vlan_interface].arp_cache_dynamic_capacity }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ip_proxy_arp is arista.avd.defined(true) %}
   ip proxy-arp
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ip_address is arista.avd.defined %}
   ip address {{ vlan_interfaces[vlan_interface].ip_address }}
{%         if vlan_interfaces[vlan_interface].ip_address_secondaries is arista.avd.defined %}
{%             for ip_address_secondary in vlan_interfaces[vlan_interface].ip_address_secondaries %}
   ip address {{ ip_address_secondary }} secondary
{%             endfor %}
{%         endif %}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ip_virtual_router_addresses is arista.avd.defined %}
{%         for ip_virtual_router_address in vlan_interfaces[vlan_interface].ip_virtual_router_addresses %}
   ip virtual-router address {{ ip_virtual_router_address }}
{%         endfor %}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ip_address_virtual is arista.avd.defined %}
   ip address virtual {{ vlan_interfaces[vlan_interface].ip_address_virtual }}
{%         if vlan_interfaces[vlan_interface].ip_address_virtual_secondaries is arista.avd.defined %}
{%             for ip_address_virtual_secondary in vlan_interfaces[vlan_interface].ip_address_virtual_secondaries %}
   ip address virtual {{ ip_address_virtual_secondary }} secondary
{%             endfor %}
{%         endif %}
{%     endif %}
{%     for ip_helper in vlan_interfaces[vlan_interface].ip_helpers | arista.avd.natural_sort %}
{%         set ip_helper_cli = "ip helper-address " ~ ip_helper %}
{%         if vlan_interfaces[vlan_interface].ip_helpers[ip_helper].vrf is arista.avd.defined %}
{%            set ip_helper_cli = ip_helper_cli ~ " vrf " ~ vlan_interfaces[vlan_interface].ip_helpers[ip_helper].vrf %}
{%         endif %}
{%         if vlan_interfaces[vlan_interface].ip_helpers[ip_helper].source_interface is arista.avd.defined %}
{%            set ip_helper_cli = ip_helper_cli ~ " source-interface " ~ vlan_interfaces[vlan_interface].ip_helpers[ip_helper].source_interface %}
{%         endif %}
   {{ ip_helper_cli }}
{%     endfor %}
{%     if vlan_interfaces[vlan_interface].ip_igmp is arista.avd.defined(true) %}
   ip igmp
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_enable is arista.avd.defined(true) %}
   ipv6 enable
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_address is arista.avd.defined %}
   ipv6 address {{ vlan_interfaces[vlan_interface].ipv6_address }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_address_link_local is arista.avd.defined %}
   ipv6 address {{ vlan_interfaces[vlan_interface].ipv6_address_link_local }} link-local
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_address_virtual is arista.avd.defined %}
   ipv6 address virtual {{ vlan_interfaces[vlan_interface].ipv6_address_virtual }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_nd_ra_disabled is arista.avd.defined(true) %}
   ipv6 nd ra disabled
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_nd_managed_config_flag is arista.avd.defined(true) %}
   ipv6 nd managed-config-flag
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_nd_prefixes is arista.avd.defined %}
{%         for prefix in vlan_interfaces[vlan_interface].ipv6_nd_prefixes %}
{%             set ipv6_nd_prefix_cli = "ipv6 nd prefix " ~ prefix %}
{%             if vlan_interfaces[vlan_interface].ipv6_nd_prefixes[prefix].valid_lifetime is arista.avd.defined %}
{%                 set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " " ~ vlan_interfaces[vlan_interface].ipv6_nd_prefixes[prefix].valid_lifetime %}
{%                 if vlan_interfaces[vlan_interface].ipv6_nd_prefixes[prefix].preferred_lifetime is arista.avd.defined %}
{%                     set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " " ~ vlan_interfaces[vlan_interface].ipv6_nd_prefixes[prefix].preferred_lifetime %}
{%                 endif %}
{%             endif %}
{%             if vlan_interfaces[vlan_interface].ipv6_nd_prefixes[prefix].no_autoconfig_flag is arista.avd.defined(true) %}
{%                 set ipv6_nd_prefix_cli = ipv6_nd_prefix_cli ~ " no-autoconfig" %}
{%             endif %}
   {{ ipv6_nd_prefix_cli }}
{%         endfor %}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].multicast.ipv4.source_route_export.enabled is arista.avd.defined(true) %}
{%         if vlan_interfaces[vlan_interface].multicast.ipv4.source_route_export.administrative_distance is arista.avd.defined %}
   multicast ipv4 source route export {{ vlan_interfaces[vlan_interface].multicast.ipv4.source_route_export.administrative_distance }}
{%          else %}
   multicast ipv4 source route export
{%          endif %}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].access_group_in is arista.avd.defined %}
   ip access-group {{ vlan_interfaces[vlan_interface].access_group_in }} in
{%     endif %}
{%     if vlan_interfaces[vlan_interface].access_group_out is arista.avd.defined %}
   ip access-group {{ vlan_interfaces[vlan_interface].access_group_out }} out
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_access_group_in is arista.avd.defined %}
   ipv6 access-group {{ vlan_interfaces[vlan_interface].ipv6_access_group_in }} in
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_access_group_out is arista.avd.defined %}
   ipv6 access-group {{ vlan_interfaces[vlan_interface].ipv6_access_group_out }} out
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ospf_network_point_to_point is arista.avd.defined(true) %}
   ip ospf network point-to-point
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ospf_area is arista.avd.defined %}
   ip ospf area {{ vlan_interfaces[vlan_interface].ospf_area }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ospf_cost is arista.avd.defined %}
   ip ospf cost {{ vlan_interfaces[vlan_interface].ospf_cost }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ospf_authentication is arista.avd.defined %}
{%         if vlan_interfaces[vlan_interface].ospf_authentication == "simple" %}
   ip ospf authentication
{%         elif vlan_interfaces[vlan_interface].ospf_authentication == "message-digest" %}
   ip ospf authentication message-digest
{%         endif %}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ospf_authentication_key is arista.avd.defined %}
   ip ospf authentication-key 7 {{ vlan_interfaces[vlan_interface].ospf_authentication_key }}
{%     endif %}
{%     for ospf_message_digest_key in vlan_interfaces[vlan_interface].ospf_message_digest_keys | arista.avd.natural_sort %}
{%         if vlan_interfaces[vlan_interface].ospf_message_digest_keys[ospf_message_digest_key].hash_algorithm is arista.avd.defined and
              vlan_interfaces[vlan_interface].ospf_message_digest_keys[ospf_message_digest_key].key is arista.avd.defined %}
   ip ospf message-digest-key {{ ospf_message_digest_key }} {{ vlan_interfaces[vlan_interface].ospf_message_digest_keys[ospf_message_digest_key].hash_algorithm }} 7 {{ vlan_interfaces[vlan_interface].ospf_message_digest_keys[ospf_message_digest_key].key }}
{%         endif %}
{%     endfor %}
{%     if vlan_interfaces[vlan_interface].pim.ipv4.sparse_mode is arista.avd.defined(true) %}
   pim ipv4 sparse-mode
{%     endif %}
{%     if vlan_interfaces[vlan_interface].pim.ipv4.local_interface is arista.avd.defined %}
   pim ipv4 local-interface {{ vlan_interfaces[vlan_interface].pim.ipv4.local_interface }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ipv6_virtual_router_address is arista.avd.defined %}
   ipv6 virtual-router address {{ vlan_interfaces[vlan_interface].ipv6_virtual_router_address }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].isis_enable is arista.avd.defined %}
   isis enable {{ vlan_interfaces[vlan_interface].isis_enable }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].isis_passive is arista.avd.defined(true) %}
   isis passive
{%     endif %}
{%     if vlan_interfaces[vlan_interface].isis_metric is arista.avd.defined %}
   isis metric {{ vlan_interfaces[vlan_interface].isis_metric }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].isis_network_point_to_point is arista.avd.defined(true) %}
   isis network point-to-point
{%     endif %}
{%     if vlan_interfaces[vlan_interface].vrrp.virtual_router is arista.avd.defined %}
{%         if vlan_interfaces[vlan_interface].vrrp.priority is arista.avd.defined %}
   vrrp {{ vlan_interfaces[vlan_interface].vrrp.virtual_router }} priority-level {{ vlan_interfaces[vlan_interface].vrrp.priority }}
{%         endif %}
{%         if vlan_interfaces[vlan_interface].vrrp.advertisement_interval is arista.avd.defined %}
   vrrp {{ vlan_interfaces[vlan_interface].vrrp.virtual_router }} advertisement interval {{ vlan_interfaces[vlan_interface].vrrp.advertisement_interval }}
{%         endif %}
{%         if vlan_interfaces[vlan_interface].vrrp.preempt_delay_minimum is arista.avd.defined %}
   vrrp {{ vlan_interfaces[vlan_interface].vrrp.virtual_router }} preempt delay minimum {{ vlan_interfaces[vlan_interface].vrrp.preempt_delay_minimum }}
{%         endif %}
{%         if vlan_interfaces[vlan_interface].vrrp.ipv4 is arista.avd.defined %}
   vrrp {{ vlan_interfaces[vlan_interface].vrrp.virtual_router }} ipv4 {{ vlan_interfaces[vlan_interface].vrrp.ipv4 }}
{%         endif %}
{%         if vlan_interfaces[vlan_interface].vrrp.ipv6 is arista.avd.defined %}
   vrrp {{ vlan_interfaces[vlan_interface].vrrp.virtual_router }} ipv6 {{ vlan_interfaces[vlan_interface].vrrp.ipv6 }}
{%         endif %}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].ip_attached_host_route_export.distance is arista.avd.defined %}
   ip attached-host route export {{ vlan_interfaces[vlan_interface].ip_attached_host_route_export.distance }}
{%     elif vlan_interfaces[vlan_interface].ip_attached_host_route_export is arista.avd.defined %}
   ip attached-host route export
{%     endif %}
{%     if vlan_interfaces[vlan_interface].bfd.interval is arista.avd.defined and
          vlan_interfaces[vlan_interface].bfd.min_rx is arista.avd.defined and
          vlan_interfaces[vlan_interface].bfd.multiplier is arista.avd.defined %}
   bfd interval {{ vlan_interfaces[vlan_interface].bfd.interval }} min-rx {{ vlan_interfaces[vlan_interface].bfd.min_rx }} multiplier {{ vlan_interfaces[vlan_interface].bfd.multiplier }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].service_policy.pbr.input is arista.avd.defined %}
   service-policy type pbr input {{ vlan_interfaces[vlan_interface].service_policy.pbr.input }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].pvlan_mapping is arista.avd.defined %}
   pvlan mapping {{ vlan_interfaces[vlan_interface].pvlan_mapping }}
{%     endif %}
{%     if vlan_interfaces[vlan_interface].eos_cli is arista.avd.defined %}
   {{ vlan_interfaces[vlan_interface].eos_cli | indent(3, false) }}
{%     endif %}
{% endfor %}
